import sqlite3
import random

# –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
def execute_db_query(query, params=(), fetchone=False, fetchall=False, commit=False):
    con = sqlite3.connect('tgbase.db')
    cur = con.cursor()
    cur.execute(query, params)
    result = cur.fetchone() if fetchone else cur.fetchall() if fetchall else None
    if commit:
        con.commit()
    con.close()
    return result

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_user(telegram_id):
    existing_user = execute_db_query("SELECT * FROM base WHERE telegram_id = ?", (telegram_id,), fetchone=True)
    if existing_user:
        return False
    execute_db_query('INSERT INTO base (telegram_id) VALUES (?)', (telegram_id,), commit=True)
    return True

# –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∫–∞–∑–∏–Ω–æ
def casino(telegram_id, money, mention):
    user = execute_db_query("SELECT * FROM base WHERE telegram_id = ?", (telegram_id,), fetchone=True)
    if not user:
        return f'‚ùå {mention} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start.'

    current_money = user[2]
    if current_money < money:
        return f'‚ùå {mention} —É —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏–≥—Ä—ã!'

    result = random.choices(['win', 'lose'], weights=[0.3, 0.7], k=1)[0]
    if result == 'win':
        multiplier = random.uniform(0.1, 1.5)
        winnings = round(int(money * multiplier) / 10) * 10
        new_money = current_money + winnings
        message = f'üí∏ {mention} –≤—ã–∏–≥—Ä–∞–ª(–∞)! –í–∞—à –≤—ã–∏–≥—Ä—ã—à: {winnings}. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_money}.'
    else:
        new_money = current_money - money
        message = f'üóëÔ∏è {mention} –ø—Ä–æ–∏–≥—Ä–∞–ª(–∞). –ü–æ—Ç–µ—Ä—è–Ω–æ: {money}. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_money}.'

    execute_db_query("UPDATE base SET count_money = ?, count_game = count_game + 1 WHERE telegram_id = ?",
                     (new_money, telegram_id), commit=True)
    return message

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–Ω–µ–≥
def free_money(telegram_id, mention):
    user = execute_db_query("SELECT * FROM base WHERE telegram_id = ?", (telegram_id,), fetchone=True)
    if not user:
        return f'‚ùå {mention} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start.'

    new_money = user[2] + 500
    execute_db_query("UPDATE base SET count_money = ?, count_game = count_game + 1 WHERE telegram_id = ?",
                     (new_money, telegram_id), commit=True)
    return f"‚ù§Ô∏è –£ {mention} –±—ã–ª –ø–æ–ø–æ–ª–Ω–µ–Ω –±–∞–ª–∞–Ω—Å!"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_stats(telegram_id):
    user = execute_db_query("SELECT * FROM base WHERE telegram_id = ?", (telegram_id,), fetchone=True)
    return (user[2], user[3]) if user else False

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–ø-5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def get_leaderboard():
    leaders = execute_db_query("""
        SELECT telegram_id, count_money, count_game
        FROM base
        ORDER BY count_game DESC, count_money DESC
        LIMIT 5
    """, fetchall=True)
    return [(index, *leader) for index, leader in enumerate(leaders, start=1)]